/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package servicioempleodigital.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import servicioempleodigital.model.Resultado;
import servicioempleodigital.model.ResultadoModel;
import servicioempleodigital.model.ResultadoSoap;

import servicioempleodigital.service.persistence.ResultadoPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Resultado service. Represents a row in the &quot;FOO_Resultado&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ResultadoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ResultadoImpl}.
 * </p>
 *
 * @author Francisco de Borja Segovia Gilsanz
 * @see ResultadoImpl
 * @see Resultado
 * @see ResultadoModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class ResultadoModelImpl extends BaseModelImpl<Resultado>
	implements ResultadoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a resultado model instance should use the {@link Resultado} interface instead.
	 */
	public static final String TABLE_NAME = "FOO_Resultado";
	public static final Object[][] TABLE_COLUMNS = {
			{ "puntuacion", Types.DOUBLE },
			{ "idCandidato", Types.BIGINT },
			{ "idOferta", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("puntuacion", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("idCandidato", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("idOferta", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table FOO_Resultado (puntuacion DOUBLE,idCandidato LONG not null,idOferta LONG not null,primary key (idCandidato, idOferta))";
	public static final String TABLE_SQL_DROP = "drop table FOO_Resultado";
	public static final String ORDER_BY_JPQL = " ORDER BY resultado.id.idCandidato ASC, resultado.id.idOferta ASC";
	public static final String ORDER_BY_SQL = " ORDER BY FOO_Resultado.idCandidato ASC, FOO_Resultado.idOferta ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(servicioempleodigital.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.servicioempleodigital.model.Resultado"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(servicioempleodigital.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.servicioempleodigital.model.Resultado"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Resultado toModel(ResultadoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Resultado model = new ResultadoImpl();

		model.setPuntuacion(soapModel.getPuntuacion());
		model.setIdCandidato(soapModel.getIdCandidato());
		model.setIdOferta(soapModel.getIdOferta());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Resultado> toModels(ResultadoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Resultado> models = new ArrayList<Resultado>(soapModels.length);

		for (ResultadoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(servicioempleodigital.service.util.ServiceProps.get(
				"lock.expiration.time.servicioempleodigital.model.Resultado"));

	public ResultadoModelImpl() {
	}

	@Override
	public ResultadoPK getPrimaryKey() {
		return new ResultadoPK(_idCandidato, _idOferta);
	}

	@Override
	public void setPrimaryKey(ResultadoPK primaryKey) {
		setIdCandidato(primaryKey.idCandidato);
		setIdOferta(primaryKey.idOferta);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ResultadoPK(_idCandidato, _idOferta);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ResultadoPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Resultado.class;
	}

	@Override
	public String getModelClassName() {
		return Resultado.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("puntuacion", getPuntuacion());
		attributes.put("idCandidato", getIdCandidato());
		attributes.put("idOferta", getIdOferta());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Double puntuacion = (Double)attributes.get("puntuacion");

		if (puntuacion != null) {
			setPuntuacion(puntuacion);
		}

		Long idCandidato = (Long)attributes.get("idCandidato");

		if (idCandidato != null) {
			setIdCandidato(idCandidato);
		}

		Long idOferta = (Long)attributes.get("idOferta");

		if (idOferta != null) {
			setIdOferta(idOferta);
		}
	}

	@JSON
	@Override
	public double getPuntuacion() {
		return _puntuacion;
	}

	@Override
	public void setPuntuacion(double puntuacion) {
		_puntuacion = puntuacion;
	}

	@JSON
	@Override
	public long getIdCandidato() {
		return _idCandidato;
	}

	@Override
	public void setIdCandidato(long idCandidato) {
		_idCandidato = idCandidato;
	}

	@JSON
	@Override
	public long getIdOferta() {
		return _idOferta;
	}

	@Override
	public void setIdOferta(long idOferta) {
		_idOferta = idOferta;
	}

	@Override
	public Resultado toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Resultado)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ResultadoImpl resultadoImpl = new ResultadoImpl();

		resultadoImpl.setPuntuacion(getPuntuacion());
		resultadoImpl.setIdCandidato(getIdCandidato());
		resultadoImpl.setIdOferta(getIdOferta());

		resultadoImpl.resetOriginalValues();

		return resultadoImpl;
	}

	@Override
	public int compareTo(Resultado resultado) {
		ResultadoPK primaryKey = resultado.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Resultado)) {
			return false;
		}

		Resultado resultado = (Resultado)obj;

		ResultadoPK primaryKey = resultado.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Resultado> toCacheModel() {
		ResultadoCacheModel resultadoCacheModel = new ResultadoCacheModel();

		resultadoCacheModel.resultadoPK = getPrimaryKey();

		resultadoCacheModel.puntuacion = getPuntuacion();

		resultadoCacheModel.idCandidato = getIdCandidato();

		resultadoCacheModel.idOferta = getIdOferta();

		return resultadoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{puntuacion=");
		sb.append(getPuntuacion());
		sb.append(", idCandidato=");
		sb.append(getIdCandidato());
		sb.append(", idOferta=");
		sb.append(getIdOferta());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("servicioempleodigital.model.Resultado");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>puntuacion</column-name><column-value><![CDATA[");
		sb.append(getPuntuacion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idCandidato</column-name><column-value><![CDATA[");
		sb.append(getIdCandidato());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idOferta</column-name><column-value><![CDATA[");
		sb.append(getIdOferta());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Resultado.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Resultado.class
		};
	private double _puntuacion;
	private long _idCandidato;
	private long _idOferta;
	private Resultado _escapedModel;
}